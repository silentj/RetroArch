name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: pkg/msvc-uwp

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64

jobs:
  build:
    # windows-2016 has VS 2017 installed (which the UWP solution requires)
    # Currently, this has the packages I need: https://github.com/actions/virtual-environments/blob/main/images/win/Windows2016-Readme.md
    # Need to keep an eye on this issue to see when/if they kill the windows-2016 image: https://github.com/actions/virtual-environments/issues/68
    runs-on: windows-2016

    steps:
    - 
      name: Checkout the source code
      uses: actions/checkout@v2

    - 
      name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - 
      name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}

    # Upload the artifact
    # https://medium.com/@two06/building-tooling-with-github-actions-59401648e61d
    # â€” 
    #   uses: actions/upload-artifact@master
    #   with:
    #   name: Seatbelt
    #   path: Seatbelt\bin\Debug\Seatbelt.exe
